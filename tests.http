// URL base da API
@apiurl = http://127.0.0.1:5000
@auth-token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZXhwaXJhdGlvbiI6IjIwMjQtMDEtMTYgMjM6MjU6MTEuODc0NTg4In0._JEfjCgQz1vddOvKPrjtyewlwZV318XkX_i7rQVq2Yw

### Rota inicial - mensagem de boas vindas
GET {{apiurl}}/ HTTP/1.1

### Uma rota que não existe - devolverá 404 Not Found
GET {{apiurl}}/test HTTP/1.1

### Registo de novo utilizador - POST (dados em JSON) - resultado JSON
POST {{apiurl}}/api/users/ HTTP/1.1
Content-Type: application/json

{ 
    "name" : "Joacine Moreira",
    "email" : "joacine@gmail.com",
    "password" : "joacine",
    "phone_number": "961273656"
}

### Novo registo de novo utilizador com email já existente
POST {{apiurl}}/api/users/ HTTP/1.1
Content-Type: application/json

{ 
    "name" : "Joacine Moreira",
    "email" : "joacine@gmail.com",
    "password" : "joacine",
    "phone_number": "961273656"
}

### Rota de login do user bem sucedida
PATCH {{apiurl}}/api/users/ HTTP/1.1
Content-Type: application/json

{ 
    "email": "nunosantoslopes@hotmail.com",
    "password": "nuno"
}

### Rota de logout do user
PATCH {{apiurl}}/api/users/logout/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Rota de login do user incorreta
PATCH {{apiurl}}/api/users/ HTTP/1.1
Content-Type: application/json

{ 
    "email": "abc",
    "password": "abc"
}

### Obter entidades ativas
GET {{apiurl}}/api/entities/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Obter detalhes de uma entidade
GET {{apiurl}}/api/entities/1/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Obter detalhes de uma entidade não existente
GET {{apiurl}}/api/entities/0/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Obter lista de entidades ativas e com ofertas para aquele dia
GET {{apiurl}}/api/entities/withoffers/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Obter lista de todas as ofertas ainda disponíveis para aquele dia
GET {{apiurl}}/api/entities/offers/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Obter lista de ofertas ainda disponíveis de uma entidade para aquele dia
GET {{apiurl}}/api/entities/offers/1/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Obter lista de ofertas ainda disponíveis de uma entidade não existente para aquele dia
GET {{apiurl}}/api/entities/offers/0/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Registar a compra de uma oferta
POST {{apiurl}}/api/entities/offers/buy/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

{ 
    "offer_id" : "2"
}

### Registar a compra de uma oferta não existente
POST {{apiurl}}/api/entities/offers/buy/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

{ 
    "offer_id" : "0"
}

### Obter lista compras efetuadas pelo utilizador
GET {{apiurl}}/api/users/purchases/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

### Cancelar uma compra
PATCH {{apiurl}}/api/users/purchases/ HTTP/1.1
Authorization : {{auth-token}}
Content-Type: application/json

{
    "offer_id": "2"
}